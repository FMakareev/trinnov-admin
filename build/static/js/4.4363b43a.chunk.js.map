{"version":3,"sources":["views/NewsEditor/UpdateArticleMutation.js","views/NewsEditor/CreateArticleMutation.js","views/NewsEditor/NewsEditorFormEnhancer.js","views/NewsEditor/NewsEditor.js"],"names":["UpdateArticleMutation","gql","APOLLO_TYPES","News","CreateArticleMutation","GetNewsQuery","QueryCompose","compose","graphql","skip","match","params","slug","options","console","log","variables","name","NewsEditorFormEnhancer","WrapperComponent","state","EditorRefInstance","transformData","values","newValues","Object","assign","head_image","file","og_thumbnail","thumbnail","thumbnail_featured","content","JSON","stringify","is_featured","with_video","onPublish","a","id","props","UpdateArticles","catch","error","parse","result","errors","networkError","entries","map","key","value","FORM_ERROR","message","CreateArticles","history","push","onDraft","this","data","loading","addEditorRefInstance","setState","initialValues","news","React","Component","focusOnError","createDecorator","WithHOC","onSubmit","savedData","save","blocks","length","decorators","render","handleSubmit","event","fluid","className","noGutters","PageTitle","sm","title","subtitle","outline","theme","size","type","lg","ArticleHeadImage","ArticleEditor","OpenGraph","CardDetails","CardFeatured","SidebarCategories"],"mappings":"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","file":"static/js/4.4363b43a.chunk.js","sourcesContent":["import {gql} from \"apollo-boost\";\nimport {APOLLO_TYPES} from \"../../apollo/Types\";\n\nexport const UpdateArticleMutation = gql`\n    mutation(\n        $id: String,\n        $title: String,\n        $slug: String,\n        $content: String,\n        $head_image: String,\n        $thumbnail: String,\n        $og_thumbnail: String,\n        $og_description: String,\n        $card_description: String,\n        $is_featured: String,\n        $thumbnail_featured: String,\n        $with_video: String,\n    ) {\n        createArticles(input: {\n            id: $id\n            title: $title\n            slug: $slug\n            content: $content\n            head_image: $head_image\n            thumbnail: $thumbnail\n            og_thumbnail: $og_thumbnail\n            og_description: $og_description\n            card_description: $card_description\n            is_featured: $is_featured\n            thumbnail_featured: $thumbnail_featured\n            with_video: $with_video\n        })\n        @rest(\n            type: \"${APOLLO_TYPES.News}\",\n            path: \"/articles/\",\n            method: \"POST\"\n            bodySerializer: \"formData\"\n        ) {\n            id\n            userId\n            completed\n            title\n        }\n    }\n`;\n","import {gql} from \"apollo-boost\";\nimport {APOLLO_TYPES} from \"../../apollo/Types\";\n\n\nexport const CreateArticleMutation = gql`\n    mutation(\n        $id: String,\n        $title: String,\n        $slug: String,\n        $content: String,\n        $head_image: String,\n        $thumbnail: String,\n        $og_thumbnail: String,\n        $og_description: String,\n        $card_description: String,\n        $is_featured: String,\n        $thumbnail_featured: String,\n        $with_video: String,\n    ) {\n        createArticles(input: {\n            id: $id\n            title: $title\n            slug: $slug\n            content: $content\n            head_image: $head_image\n            thumbnail: $thumbnail\n            og_thumbnail: $og_thumbnail\n            og_description: $og_description\n            card_description: $card_description\n            is_featured: $is_featured\n            thumbnail_featured: $thumbnail_featured\n            with_video: $with_video\n        })\n        @rest(\n            type: \"${APOLLO_TYPES.News}\",\n            path: \"/articles/\",\n            method: \"POST\"\n            bodySerializer: \"formData\"\n        ) {\n            id\n            userId\n            completed\n            title\n        }\n    }\n`;\n","import React from 'react';\nimport {gql} from 'apollo-boost'\nimport {APOLLO_TYPES} from \"../../apollo/Types\";\nimport {graphql} from '@apollo/react-hoc';\nimport {compose} from \"recompose\";\nimport {UpdateArticleMutation} from \"./UpdateArticleMutation\";\nimport {CreateArticleMutation} from \"./CreateArticleMutation\";\n\nimport {FORM_ERROR} from \"final-form\";\n\n\nconst GetNewsQuery = gql`\n    query($slug: String!){\n        news(slug: $slug)\n        @rest(\n            type: \"${APOLLO_TYPES.News}\",\n            path: \"/articles/{args.slug}/\",\n        ){\n            id\n            title\n            slug\n            content\n            head_image\n            thumbnail\n            og_thumbnail\n            og_description\n            card_description\n            is_featured\n            thumbnail_featured\n            with_video\n        }\n    }\n`;\n\nconst QueryCompose = compose(\n  graphql(GetNewsQuery, {\n    skip: ({match}) => !(match.params && match.params.slug),\n    options: ({match}) => {\n      console.log('GetNewsQuery: ', match);\n      return ({\n        variables: {\n          slug: match.params && match.params.slug,\n        },\n      })\n    },\n  }),\n  graphql(CreateArticleMutation, {\n    name: 'CreateArticles'\n  }),\n  graphql(UpdateArticleMutation, {\n    name: 'UpdateArticles'\n  }),\n)\n\n\nconst NewsEditorFormEnhancer = (WrapperComponent) =>\n  QueryCompose(class extends React.Component {\n\n    state = {\n      EditorRefInstance: null,\n    };\n\n    transformData = (values) => {\n      const newValues = Object.assign({}, values);\n      if (typeof newValues.head_image !== 'string') {\n        newValues.head_image = newValues.head_image && newValues.head_image.file;\n      }\n\n      if (typeof newValues.og_thumbnail !== 'string') {\n        newValues.og_thumbnail = newValues.og_thumbnail && newValues.og_thumbnail.file;\n      }\n\n      if (typeof newValues.thumbnail !== 'string') {\n        newValues.thumbnail = newValues.thumbnail && newValues.thumbnail.file;\n      }\n\n      if (typeof newValues.thumbnail_featured !== 'string') {\n        newValues.thumbnail_featured = newValues.thumbnail_featured && newValues.thumbnail_featured.file;\n      }\n\n      if (newValues.content) {\n        newValues.content = JSON.stringify(newValues.content);\n      }\n      if (newValues.is_featured === null) {\n        newValues.is_featured = false;\n      }\n      if (newValues.with_video === null) {\n        newValues.with_video = false;\n      }\n      return newValues;\n    };\n\n    onPublish = async (values) => {\n      console.log('onPublish: ', values);\n      if (values.id) {\n        const result = await this.props.UpdateArticles({\n          variables: {\n            ...this.transformData(values),\n          }\n        })\n          .catch((error) => {\n            console.log(error);\n\n            return JSON.parse(JSON.stringify(error));\n          });\n        const errors = {};\n        if (result.networkError) {\n          Object.entries(result.networkError.result).map(([key, value]) => {\n            errors[key] = value[0];\n          });\n          console.log(errors);\n          return {\n            [FORM_ERROR]: result.message,\n            ...errors,\n          }\n        }\n\n      } else {\n        const result = await this.props.CreateArticles({\n          variables: {\n            ...this.transformData(values),\n          }\n        }).catch((error) => {\n          console.log(error);\n          return JSON.parse(JSON.stringify(error));\n        });\n        console.log('onPublish create: ', result);\n        const errors = {};\n        if (result.networkError) {\n          Object.entries(result.networkError.result).map(([key, value]) => {\n            errors[key] = value[0];\n          });\n\n          console.log(errors);\n          return {\n            [FORM_ERROR]: result.message,\n            ...errors,\n          }\n        }\n\n        this.props.history.push(`/news-editor/${values.slug}`)\n      }\n\n    };\n\n    onDraft = (values) => {\n      console.log('onDraft: ', values);\n      this.transformData(values);\n    };\n\n    render() {\n      const {data, match} = this.props;\n\n      return <WrapperComponent\n        {...this.props}\n        onPublish={this.onPublish}\n        onDraft={this.onDraft}\n        loading={data ? data.loading : !!(match.params && match.params.slug)}\n        EditorRefInstance={{\n          EditorRefInstance: this.state.EditorRefInstance,\n          addEditorRefInstance: (EditorRefInstance) => {\n            this.setState({\n              EditorRefInstance\n            })\n          }\n        }}\n        initialValues={{\n          ...(data && data.news ? data.news : {\n            is_featured: false,\n            with_video: false,\n          }),\n        }}\n      />\n    }\n  });\n\nexport default NewsEditorFormEnhancer;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport React from \"react\";\nimport {Form} from 'react-final-form'\nimport createDecorator from 'final-form-focus'\n\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n} from \"shards-react\";\nimport PageTitle from \"../../components/common/PageTitle\";\nimport OpenGraph from \"../../components/OpenGraph\";\nimport CardDetails from \"../../components/editor-components/CardDetails\";\nimport CardFeatured from \"../../components/editor-components/CardFeatured\";\nimport SidebarCategories from \"../../components/add-new-post/SidebarCategories\";\nimport ArticleHeadImage\n  from \"../../components/editor-components/ArticleHeadImage\";\n\nimport ArticleEditor from \"../../components/editor-components/ArticleEditor\";\nimport NewsEditorFormEnhancer from \"./NewsEditorFormEnhancer\";\n\n\n\nconst focusOnError = createDecorator()\n\nconst NewsValidator = async (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = 'Required'\n  }\n  if (!values.slug) {\n    errors.slug = 'Required'\n  }\n\n  if (!values.head_image) {\n    errors.head_image = 'Required'\n  }\n  if (!values.thumbnail) {\n    errors.thumbnail = 'Required'\n  }\n  if (!values.thumbnail_featured) {\n    errors.thumbnail_featured = 'Required'\n  }\n  if (!values.og_description) {\n    errors.og_description = 'Required'\n  }\n  if (!values.og_thumbnail) {\n    errors.og_thumbnail = 'Required'\n  }\n  if (!values.card_description) {\n    errors.card_description = 'Required'\n  }\n\n  return errors;\n};\n\n\nconst NewsEditor = ({onPublish, loading, initialValues, EditorRefInstance}) => {\n  if (loading) {\n    return (<div>\n      Loading ...\n    </div>)\n  }\n  return (<Form\n    onSubmit={async (values) => {\n      let savedData = {};\n      if (EditorRefInstance.EditorRefInstance) {\n        savedData = await EditorRefInstance.EditorRefInstance.save();\n        if (savedData.blocks && !savedData.blocks.length) {\n          return {\n            content: 'Required'\n          }\n        }\n      } else {\n        return {\n          content: 'Editor not initializing'\n        }\n      }\n      return onPublish({\n        ...values,\n        content: savedData,\n      })\n    }}\n    decorators={[focusOnError]}\n    initialValues={initialValues}\n    // validate={NewsValidator}\n    render={({handleSubmit}) => {\n\n      return (\n        <form onSubmit={(event) => {\n          return handleSubmit(event)\n        }}>\n\n          <Container fluid className=\"main-content-container px-4\">\n            {/* Page Header */}\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                sm=\"4\" title=\"News editor\"\n                subtitle=\"Drag and drop interface\"\n                className=\"text-sm-left\"\n              />\n              <div className=\"ml-auto\">\n                <Button outline theme=\"accent\" size=\"sm\" className=\"mr-2\">\n                  <i className=\"material-icons\">save</i> Save Draft\n                </Button>\n                <Button type={'submit'} theme=\"accent\" size=\"sm\"\n                        className=\"ml-auto\">\n                  <i className=\"material-icons\">file_copy</i> Publish\n                </Button>\n              </div>\n            </Row>\n            <Row className=\"mb-4\">\n              <Col lg=\"9\">\n                <ArticleHeadImage/>\n                <ArticleEditor\n                  EditorRefInstance={EditorRefInstance}\n                />\n\n              </Col>\n              <Col lg=\"3\">\n                <OpenGraph/>\n                <CardDetails/>\n                <CardFeatured/>\n                <SidebarCategories/>\n              </Col>\n            </Row>\n          </Container>\n        </form>\n      )\n    }}\n  />)\n}\n\nconst WithHOC = NewsEditorFormEnhancer(NewsEditor);\n\nexport default (props) => (<WithHOC {...props}/>);\n"],"sourceRoot":""}